dados <- read.csv(file = "dados.csv", stringsAsFactors = FALSE, na.strings="-", header = T)
colnames(dados) = c("Bloco", "Parcela", "Hibrido", "AlturaPlantas",
"AlturaEspiga", "NumeroFolhas", "Estande")
if(2 >3){
print("dois é maior que três")
} else {
print("dois não é maior que três")
}
if(dados[3,4] < 1.5){
print("Híbrido pequeno demais")
} else {
print("Tamanho provavelmente adequado")
}
if(dados[7,4] < 1.5){
print("Híbrido pequeno demais")
} else if (dados[7,3] > 1.5 && dados[7,1] < 2.0){
print("Tamanho OK")
} else {
print("Cresceu demais")
}
for(i in 1:10){
print(i)
}
test <- vector()
for(i in 1:10){
test[i] <- i+4
}
for(i in 1:nrow(dados)){
if(dados[i,4] < 1.5){
print("Híbrido pequeno demais")
} else if (dados[i,4] > 1.5 && dados[i,4] < 2.0){
print("Tamanho OK")
} else {
print("Cresceu demais")
}
}
x <- 1
while(x < 5){
x <- x + 1
print(x)
}
x <- 1
while(x < 5){
x + 1
print(x)
}
x <- 1
while(x < 5){
x <- x + 1
if(x==4) break
print(x)
}
x <- 1
while(x < 5){
x <- x + 1
if(x==4) next
print(x)
}
x <- 1
repeat{
x <- x+1
print(x)
if(x==4) break
}
ex_mat <- matrix(nrow=10, ncol=10)
for(i in 1:dim(ex_mat)[1]) {
for(j in 1:dim(ex_mat)[2]) {
ex_mat[i,j] = i*j
}
}
ex_mat <- matrix(nrow=10, ncol=10)
for(i in 1:dim(ex_mat)[1]) {   # Primeiro nível, não tem espaço
for(j in 1:dim(ex_mat)[2]) { # Segundo nível tem um espaço (tab)
ex_mat[i,j] = i*j          # Terceiro nível tem dois espaços
}                            # Fechei o segundo nível
}                              # Fechei o primeiro nível
hist(dados$AlturaPlantas)
dados$Hibrido <- as.factor(dados$Hibrido)
dados$Parcela <- as.factor(dados$Parcela)
dados$Bloco <- as.factor(dados$Bloco)
mod1 <- lm(AlturaPlantas ~ AlturaEspiga, data = dados)
summary(mod1)
tapply(dados$AlturaPlantas, dados$Hibrido, summary)
tapply(dados$AlturaEspiga, dados$Hibrido, summary)
mod1 <- lm(AlturaPlantas ~ AlturaEspiga, data = dados)
summary(mod1)
mod1 <- aov(AlturaPlantas ~ Hibrido + Bloco, data = dados)
summary(mod1)
modaov <- aov(AlturaPlantas ~ Hibrido + Bloco, data = dados)
tukey.test <- TukeyHSD(x=modaov, 'Hibrido', conf.level=0.95)
tukey.test
library(desplot) # Este comando será necessário toda vez que for utilizar o pacote
str(dados)
View(dados)
str(dados)
col <- rep(1:4, each=25)
col
col <- rep(1:4, each=50)
length(50)
length(col)
col <- rep(1:4, each=25)
col(rep(1:2,each=50))
col<-(rep(1:2,each=50))
col
row <- rep(rep(1:5,each=5),2)
row
row <- rep(rep(1:5,5),2)
row
col
row
length(row)
row <- rep(rep(1:5,5),4)
length(row)
length(col)
dados.up <- cbind(col, row, dados)
dados.up
desplot(Bloco ~ col+row, dados,
text=Hibrido, cex=1, out1=Bloco,
out2=Hibrido, out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
desplot(Bloco ~ col+row, dados.up,
text=Hibrido, cex=1, out1=Bloco,
out2=Hibrido, out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
dados.up <- cbind(col, row, dados)
dados.up
row <- rep(rep(1:10,5),2)
row
row <- rep(1:10, each=5)
row
length()
length(row)
row <- rep(rep(1:10, each=5),2)
col <- rep(rep(1:10,5),2)
dados.up <- cbind(col, row, dados)
dados.up
col <- rep(rep(1:5,10),2)
col
length(col)
dados.up <- cbind(col, row, dados)
dados.up
col <- c(rep(1:5,10),rep(6:10,10))
dados.up <- cbind(col, row, dados)
dados.up
desplot(Bloco ~ col+row, dados.up,
text=Hibrido, cex=1, out1=Bloco,
out2=Hibrido, out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
desplot(Bloco ~ row+col, dados.up,
text=Hibrido, cex=1, out1=Bloco,
out2=Hibrido, out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
desplot(Bloco ~ row+col, dados.up,
text=Hibrido, cex=1, out1=Bloco,
out2=Hibrido, out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
desplot(Bloco ~ col+row, dados.up,
text=Hibrido, cex=1, out1=Bloco,
out2=Hibrido, out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
desplot(Bloco ~ row+col, dados.up,
text=Hibrido, cex=1, out1=Bloco,
out2=Hibrido, out2.gpar=list(col = "gray50", lwd = 1, lty = 1))
dados.up
